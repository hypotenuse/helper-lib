

@mixin vendor-prefix($property, $value)
	-webkit-#{$property}: #{$value}
	-khtml-#{$property}: #{$value}
	-moz-#{$property}: #{$value}
	-ms-#{$property}: #{$value}
	-o-#{$property}: #{$value}
	#{$property}: #{$value}


=font-face__normals
	font-weight: normal
	font-style: normal
	
=font-face__load($name, $path, $format: none)
	font-family: $name
	// IE
	@if ($format == 'embedded-opentype')
		src: url($path)
		src: url($path + '?#iefix') format($format)
	@else
		src: url($path) format($format)
		+font-face__normals

@mixin font-face($name: fontName, $eot: none, $woff2: none, $woff: none, $ttf: none, $svg: none)
	
	$formats: ('embedded-opentype', 'woff2', 'woff', 'truetype', 'svg')

	@if ($eot != none)
		@font-face
			+font-face__load($name, $eot,   nth($formats, 1))

	@if ($woff2 != none)
		@font-face
			+font-face__load($name, $woff2, nth($formats, 2))

	@if ($woff != none)
		@font-face
			+font-face__load($name, $woff,  nth($formats, 3))

	@if ($ttf != none)
		@font-face
			+font-face__load($name, $ttf,   nth($formats, 4))

	@if ($svg != none)
		@font-face
			+font-face__load($name, $svg,   nth($formats, 5))


@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999)
	
	background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor))
	background-image: -webkit-linear-gradient(top, $startColor, $endColor)
	background-image:    -moz-linear-gradient(top, $startColor, $endColor)
	background-image:     -ms-linear-gradient(top, $startColor, $endColor)
	background-image:      -o-linear-gradient(top, $startColor, $endColor)
	background-image:         linear-gradient(top, $startColor, $endColor)
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}')
	background-color: $startColor


@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999)

	background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor))
	background-image: -webkit-linear-gradient(left, $startColor, $endColor)
	background-image:    -moz-linear-gradient(left, $startColor, $endColor)
	background-image:     -ms-linear-gradient(left, $startColor, $endColor)
	background-image:      -o-linear-gradient(left, $startColor, $endColor)
	background-image:         linear-gradient(left, $startColor, $endColor)
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr = '#{$startColor}', endColorStr = '#{$endColor}', gradientType = '1')
	background-color: $startColor


@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos: 100%)
	
	background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos)
	background:    -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos)
	background:     -ms-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos)
	background:      -o-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos)
	background:        -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos, $startColor), color-stop($endPos, $endColor))
	background:         radial-gradient(ellipse at center, $startColor $startPos, $endColor $endPos)


@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px)

	-webkit-border-top-left-radius:     $topLeftRadius
	-webkit-border-top-right-radius:    $topRightRadius
	-webkit-border-bottom-right-radius: $bottomRightRadius
	-webkit-border-bottom-left-radius:  $bottomLeftRadius

	-moz-border-radius-topleft:     $topLeftRadius
	-moz-border-radius-topright:    $topRightRadius
	-moz-border-radius-bottomright: $bottomRightRadius
	-moz-border-radius-bottomleft:  $bottomLeftRadius

	border-top-left-radius:     $topLeftRadius
	border-top-right-radius:    $topRightRadius
	border-bottom-right-radius: $bottomRightRadius
	border-bottom-left-radius:  $bottomLeftRadius


@mixin box($orient: horizontal, $pack: center, $align: center)
	
	display: -webkit-box
	display: -moz-box
	display: box
	@include vendor-prefix('box-orient', $orient)
	@include vendor-prefix('box-pack', $pack)
	@include vendor-prefix('box-align', $align)


@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C)
	background-color: transparent
	background-color: rgba($r, $g, $b, $opacity)
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr = '#{$color}', endColorstr = '#{$color}')
	zoom: 1


@mixin background-opacity($color: #000, $opacity: 0.85)
	background: $color
	background: rgba($color, $opacity)


@mixin box-flex($value: 1)
	@include vendor-prefix('box-flex', $value)


@mixin columns($count: 3, $gap: 10)
	@include vendor-prefix('column-count', $count)
	@include vendor-prefix('column-gap', $gap)


@mixin border-radius($radius: 5px)
	@include vendor-prefix('border-radius', $radius)


@mixin box-shadow($x: 2px, $y: 2px, $spread: 0, $blur: 5px, $color: rgba(0, 0, 0, .4), $inset: '')
	@if ($x == none)
		@include vendor-prefix('box-shadow', none)
	@else if ($inset == inset)
		@include vendor-prefix('box-shadow', $inset $x $y $spread $blur $color)
	@else
		@include vendor-prefix('box-shadow', $x $y $spread $blur $color)


@mixin box-sizing($type: border-box)
	@include vendor-prefix('box-sizing', $type)


@mixin inline-block
	display: -moz-inline-stack
	display: inline-block
	*zoom: 1
	*display: inline


@mixin opacity($opacity: 0.5)
	
	$percentage: $opacity * 100

	@include vendor-prefix('opacity', $opacity)
	// IE
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $percentage + ")"
	filter: alpha(opacity = $percentage)


@mixin outline-radius($radius: 5px)
	@include vendor-prefix('outline-radius', $radius)


@mixin resize($direction: both)
	@include vendor-prefix('resize', $direction)


@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0)
	@include vendor-prefix('transform', rotate($deg + deg))
	filter: progid:DXImageTransform.Microsoft.Matrix(M11 = #{$m11}, M12 = #{$m12}, M21 = #{$m21}, M22 = #{$m22}, sizingMethod = 'auto expand')
	zoom: 1


@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4))
	text-shadow: $x $y $blur $color


@mixin transform($params)
	@include vendor-prefix('transform', $params)


@mixin transform-origin($params)
	@include vendor-prefix('transform-origin', $params)


@mixin transform-style($style: preserve-3d)
	@include vendor-prefix('transform-style', $style)


@mixin transition($properties: none)
	@if ($properties != none)
		@include vendor-prefix('transition', $properties)
	@else
		@include vendor-prefix('transition',  "all 0.2s ease-in-out 0s")


@mixin noselect
	@include vendor-prefix('user-select', none)


@mixin font-smoothing($value: on)
	@if $value == on
		-webkit-font-smoothing: antialiased
		-moz-osx-font-smoothing: grayscale
	@else
		-webkit-font-smoothing: subpixel-antialiased
		-moz-osx-font-smoothing: auto


@mixin keyframes($name)
	@-webkit-keyframes #{$name}
		@content
	@-moz-keyframes #{$name}
		@content
	@-ms-keyframes #{$name}
		@content
	@-o-keyframes #{$name}
		@content
	@keyframes #{$name}
		@content


// animation-name: none
// animation-duration: 0s
// animation-timing-function: ease
// animation-delay: 0s
// animation-iteration-count: 1
// animation-direction: normal
// animation-fill-mode: none
// animation-play-state: running
@mixin animation($str)
	@include vendor-prefix('animation', $str)


@mixin media($mw)
	@media only screen and (max-width: $mw)
		@content


// Debugging Tools
@mixin o
	outline: 1px solid red
@mixin b
	border: 1px solid red